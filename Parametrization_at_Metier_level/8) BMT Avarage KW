---
title: "8) BEMTool Avarage KW"
author: "Andrea Pierucci and Isabella Bitetto"
date: '2022-08-05'
output:
  #bookdown::pdf_book:
  pdf_document: default
  #html_document: default
header-includes:
    - \usepackage{ragged2e}
    - \usepackage{multirow}
    - \usepackage{setspace}\doublespacing
---


```
library(readxl)
library(tidyverse)

# The following script is for creating KW files by month for BMT
# NB for create this csv you will need (as for the GT script) the vessel csv file already created and available. 
# We use the official Italian FDI data 

rm(list=ls())

# Step 1 #===============================================================================================
(FINALDF<-read.csv("D:\\Andrea\\Desktop\\revision Bemtool\\metier\\vessels\\FINALDF_VESSEL_metier_17_18_19.csv", sep = ","))

wd<-"D:/Andrea/Desktop/FISH Stock Assessment/STECF 2022/Effort regime/SET/DATA/FDI"
(RECENTDATAKW<-read.csv(paste0(wd,"/tableJ_EWG2211.csv"), sep = ";"))

COUNTRY<-"Italy"
FT1<-"DTS"
LOA1<-c("VL0612","VL1218","VL1824","VL2440")
LOA2<-c("VL0006","VL0612") # loa relate to the PGP 
GSAs<-c("GSA17","GSA18","GSA19") #the GSAs are you working with
allGSAs<-c("GSA9","GSA17","GSA18","GSA19","GSA16","GSA10","GSA11") # all the GSA of your country
FT2<-"PGP"
Metiers<-c("DEF","DWS","MDD")
firstyear<-2013 # the first year of your available data 
lastyear<-2021 # define the last available year of your data 
firstyearSTECF<-2008 # indicate the first year of STECF_21-08 available data at a GSAs level

# ===================================== DTS 

(DATA_2_A_KW<-RECENTDATAKW%>% 
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
    filter(Country.name%in%COUNTRY &  Fishing.Technique%in%FT1 & Vessel.Length.Category%in%LOA1 & principal.sub.region%in%GSAs)%>%
    group_by(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region)%>%
    summarise(Total.total.kW=sum(Total.total.kW)))

# You need to check if you have all the segments in all GSAs and all years 
(Vessel.Length.Category<-rep(rep(unique(DATA_2_A_KW$Vessel.Length.Category),length(GSAs)),length(c(firstyear:lastyear))))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_2_A_KW$Vessel.Length.Category))),length(GSAs))))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT1)
(data_check$totalkW<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_A_KW<-DATA_2_A_KW[,c(1,2,5,4,3,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,2,3,5,1,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(DATA_2_A_KW<-merge(DATA_2_A_KW,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_A_KW[is.na(DATA_2_A_KW)] = 0.00001)
(DATA_2_A_KW<-DATA_2_A_KW[,c(1,2)])
colnames(DATA_2_A_KW)[2]<-"Total.total.kW"

# I need to add the gear for label consistency 
DATA_2_A_KW$gear<-"OTB"
(DATA_2_A_KW<-separate(DATA_2_A_KW, col=FS, into=c("A","B","C","D","E"), sep="_"))
(DATA_2_A_KW<-DATA_2_A_KW[,c(1,2,3,4,5,7,6)]%>%unite("FS",C:gear, remove = T, sep = "_"))
colnames(DATA_2_A_KW)[1]<-"country_code"
colnames(DATA_2_A_KW)[2]<-"year"

# At this time a need to aggregate pgp VL0006 with VL0612 as VL0012. This kind of aggregation are defined by the user.
#==================================== PGP 
# I NEED TO GROUP the VL0006 WITH VL0612 AS VL0012

FT2<-"PGP"
LOA2<-c("VL0006","VL0612")
LOA3<-c("VL1218")

(DATA_2_B1_KW<-RECENTDATAKW%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
    filter(Country.name%in%COUNTRY &  Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA2 & principal.sub.region%in%GSAs)%>%
    group_by(Country.name,year,Fishing.Technique,principal.sub.region)%>%
    summarise(Total.total.kW=sum(as.numeric(Total.total.kW))))
DATA_2_B1_KW$Vessel.Length.Category<-"VL0012"

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(DATA_2_B1_KW$Vessel.Length.Category),length(GSAs)),length(c(firstyear:lastyear))))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_2_B1_KW$Vessel.Length.Category))),length(GSAs))))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$totalkW<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_B1_KW<-DATA_2_B1_KW[,c(1,2,4,3,6,5)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,2,3,5,1,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(DATA_2_B1_KW<-merge(DATA_2_B1_KW,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_B1_KW[is.na(DATA_2_B1_KW)] = 0.00001)
(DATA_2_B1_KW<-DATA_2_B1_KW[,c(1,2)])
colnames(DATA_2_B1_KW)[2]<-"Total.total.kW"

(DATA_2_B2_KW<-RECENTDATAKW%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
    filter(Country.name%in%COUNTRY &  Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA3 & principal.sub.region%in%GSAs))
# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(DATA_2_B2_KW$Vessel.Length.Category),length(GSAs)),length(c(firstyear:lastyear))))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_2_B2_KW$Vessel.Length.Category))),length(GSAs))))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$totalkW<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_B2_KW<-DATA_2_B2_KW[,c(1,2,5,4,3,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,2,3,5,1,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(DATA_2_B2_KW<-merge(DATA_2_B2_KW,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_B2_KW[is.na(DATA_2_B2_KW)] = 0.00001)
(DATA_2_B2_KW<-DATA_2_B2_KW[,c(1,2)])

(DATA_KW_B12<-rbind(DATA_2_B1_KW,DATA_2_B2_KW))
(DATA_KW_B12<-separate(DATA_KW_B12, col=FS, into=c("A","B","C","D","E"), sep="_"))
(DATA_KW_B12<-DATA_KW_B12%>%unite("FS",C:E, remove = T, sep = "_"))
colnames(DATA_KW_B12)[1]<-"country_code"
colnames(DATA_KW_B12)[2]<-"year"
(DATA_KW<-rbind(DATA_2_A_KW,DATA_KW_B12))
(DATA_KW<-DATA_KW%>%arrange(year,FS))
DATA_KW$Month<-0
DATA_KW$Unit<-"TotalKW"
DATA_KW$Source<-"FDI_capacity_by_country"

(DATA_KW<-separate(DATA_KW, col=FS, into=c("A","B","C","D"), sep="_"))

(DATA_KW_0612_DTS<-DATA_KW%>%filter(B%in%FT1 & C%in%"VL0612")) # 1  DF
(DATA_KW_0612_DTS$metier<-"DEF")
(DATA_KW_1240_DTS<-DATA_KW%>%filter(B%in%FT1 & C%in%c("VL1218","VL1824","VL2440"))) # 2 DF
(DATA_KW_0018_PGP<-DATA_KW%>%filter(B%in%FT2)) # 3 DF

# new DF 2 We need to duplicate the three LOA ( 1218 1824 2440 ) for the three metiers (DEF, DWS, MDD)

N<-3
(NK<-length(firstyear:lastyear)) #this is the number of years of your time series 
(NEWNEWDFKW<-DATA_KW_1240_DTS[rep(c(1:nrow(DATA_KW_1240_DTS)),N),])

# now we need to add the metiers 
(NEWNEWDFKW$metier<- rep(Metiers, each=N*NK))
###############################################################################
(DATA_KW_0612_DTS<-DATA_KW_0612_DTS[,c(1:6,11,7,8,9,10)]%>%unite("FS",c(A:metier), remove = T))

(NEWNEWDFKW<-NEWNEWDFKW[,c(1:6,11,7,8,9,10)]%>%unite("FS",c(A:metier), remove = T))
(DATA_KW_0018_PGP<-DATA_KW_0018_PGP[,c(1:5,7:10)]%>%unite("FS",c(A:C), remove = T))
(DATA_KW<-rbind(DATA_KW_0612_DTS,NEWNEWDFKW,DATA_KW_0018_PGP)) # 1 + new DF 2 + 3
(DATA_KW<-DATA_KW%>%arrange(year,FS)) ### RECENT READY NOW I NEED JUST THE OLD ONE 
# Step 2 ====================================================================================

# now take all the gsa of the "firstyear" and calculate the % of you GSA respect to the total for each fleet segment
(ALLGSAOTB<-RECENTDATAKW%>%
   select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
   filter(Country.name%in%COUNTRY & year%in%firstyear & Fishing.Technique%in%FT1 & Vessel.Length.Category%in%LOA1 & principal.sub.region%in%allGSAs))
(ALLGSAOTB$BIGTOTAL<-sum(as.numeric(ALLGSAOTB$Total.total.kW)))
ALLGSAOTB$PERC<-as.numeric(ALLGSAOTB$Total.total.kW)/as.numeric(ALLGSAOTB$BIGTOTAL)
(ALLGSAOTB<-ALLGSAOTB%>%filter(principal.sub.region%in%GSAs))

# Two lines below if you need different Fishing technique like PGP_ 
(ALLGSAPGP_A<-RECENTDATAKW%>%select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
    filter(Country.name%in%COUNTRY & year%in%firstyear & Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA2 & principal.sub.region%in%allGSAs)%>%
    group_by(Country.name,year,Fishing.Technique,principal.sub.region)%>%
    summarize(Total.total.kW=sum(as.numeric(Total.total.kW))))
ALLGSAPGP_A$Vessel.Length.Category<-"VL0012"
(ALLGSAPGP_A$BIGTOTAL<-sum(ALLGSAPGP_A$Total.total.kW))
ALLGSAPGP_A$PERC<-as.numeric(ALLGSAPGP_A$Total.total.kW)/as.numeric(ALLGSAPGP_A$BIGTOTAL)
(ALLGSAPGP_A<-ALLGSAPGP_A%>%filter(principal.sub.region%in%GSAs))

(ALLGSAPGP_B<-RECENTDATAKW%>%select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,Total.total.kW)%>%
    filter(Country.name%in%COUNTRY & year%in%firstyear & Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA3 & principal.sub.region%in%allGSAs))
(ALLGSAPGP_B$BIGTOTAL<-sum(as.numeric(ALLGSAPGP_B$Total.total.kW)))
ALLGSAPGP_B$PERC<-as.numeric(ALLGSAPGP_B$Total.total.kW)/as.numeric(ALLGSAPGP_B$BIGTOTAL)

(ALLGSAPGP_B<-ALLGSAPGP_B%>%filter(principal.sub.region%in%GSAs))
(ALLGSADTSPGP<-rbind(ALLGSAOTB,ALLGSAPGP_A,ALLGSAPGP_B))
(ALLGSADTSPGP<-ALLGSADTSPGP[,c(1:5,8)]%>%arrange(year,Fishing.Technique,Vessel.Length.Category))  # HERE are the percentage I need to apply to the OLD data set where the GSA level is absent

# Please check if there are some missing years or LOA
# if there are some missing value you can run the following lines filling in 0s for those missing percentages 

(FS<-rep(c(unique(ALLGSADTSPGP$Vessel.Length.Category)[1:4],unique(ALLGSADTSPGP$Vessel.Length.Category)[c(5,2)]),length(GSAs)))
(year<-rep(firstyear,length(FS)))
(Fishing.Technique<-rep(c(rep(unique(ALLGSADTSPGP$Fishing.Technique)[1],4), rep(unique(ALLGSADTSPGP$Fishing.Technique)[2],2)),length(GSAs)))
(principal.sub.region<-rep(unique(ALLGSADTSPGP$principal.sub.region),each=(length(FS)/length(GSAs))))
(check_dataframe<-data.frame(FS,year,Fishing.Technique,principal.sub.region))
check_dataframe$Country.name<-COUNTRY
check_dataframe$PERC<-0

(ALLGSADTSPGP<-ALLGSADTSPGP[,c(1,2,5,4,3,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(check_dataframe<-check_dataframe[,c(5,2,4,3,1,6)]%>%unite("FS",Country.name:FS, remove = T, sep = "_"))

(ALLGSADTSPGP<-merge(ALLGSADTSPGP,check_dataframe,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(ALLGSADTSPGP[is.na(ALLGSADTSPGP)] = 0.00001)
(ALLGSADTSPGP<-ALLGSADTSPGP[,c(1,2)])
colnames(ALLGSADTSPGP)[2]<-"PERC"

##  step 3 #=============================================================================================
# Here there is the extraction of data from 2008 to 2013
library(readxl)
dir<-"D:/Andrea/Desktop/NEW_BEMTool/STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx"

(OLD_DATA_KW<-read_xlsx(dir, sheet = 2))

# all the GSA. Please check if there are some missing years or fleets segments 

CC<-"ITA"
firstyearSTECF<-2008 # indicate the first year of STECF_21-08 available data at a GSAs level

(OLD_DATA_KW_DTS<-OLD_DATA_KW%>%
    select(country_code,year,fishing_tech,vessel_length,variable_code,value,supra_reg)%>%
    filter(country_code%in%CC & year<firstyear& variable_code%in%"totkw" & fishing_tech%in%FT1 & supra_reg %in%"AREA37" & vessel_length%in%LOA1 ))

# here a data frame for checking missing vessel length in some years
(Vessel.Length.Category<-rep(sort(unique(OLD_DATA_KW_DTS$vessel_length)),length(c(firstyearSTECF:c(firstyear-1)))))
(year<-rep(rep(sort(c(firstyearSTECF:c(firstyear-1))),each=(length(unique(Vessel.Length.Category))))))
(data_check<-data.frame(year,Vessel.Length.Category))
(data_check$country_code<-CC)
(data_check$fishing_tech<-FT1)
(data_check$value<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.

(OLD_DATA_KW_DTS<-OLD_DATA_KW_DTS[,c(1,2,3,4,6)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(3,1,4,2,5)]%>%unite("FS",country_code:Vessel.Length.Category, remove = T, sep = "_"))
(OLD_DATA_KW_DTS<-merge(OLD_DATA_KW_DTS,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_KW_DTS[is.na(OLD_DATA_KW_DTS)] = 0.00001)
(OLD_DATA_KW_DTS<-OLD_DATA_KW_DTS[,c(1,2)])
colnames(OLD_DATA_KW_DTS)[2]<-"value"

(OLD_DATA_KW_DTS<-separate(OLD_DATA_KW_DTS, col=FS, into=c("A","B","C","D"), sep="_"))
colnames(OLD_DATA_KW_DTS)[1]<-"country_code"
colnames(OLD_DATA_KW_DTS)[2]<-"year"
colnames(OLD_DATA_KW_DTS)[3]<-"fishing_tech"
colnames(OLD_DATA_KW_DTS)[4]<-"vessel_length"
OLD_DATA_KW_DTS$variable_code<-"totkw"
OLD_DATA_KW_DTS$supra_reg<-"AREA37"

(OLD_DATA_KW_PGP_1<-OLD_DATA_KW%>%
    select(country_code,year,fishing_tech,vessel_length,variable_code,value,supra_reg)%>%
    filter(country_code%in%CC & year<firstyear& variable_code%in%"totkw" & fishing_tech%in%FT2 & supra_reg %in%"AREA37" & vessel_length%in%LOA2)%>%
    group_by(country_code,year,fishing_tech,variable_code,supra_reg)%>%
    summarise(value=sum(as.numeric(value))))
(OLD_DATA_KW_PGP_1$vessel_length<-"VL0012")

(OLD_DATA_KW_PGP_2<-OLD_DATA_KW%>%
    select(country_code,year,fishing_tech,vessel_length,variable_code,value,supra_reg)%>%
    filter(country_code%in%CC & year<firstyear& variable_code%in%"totkw" & fishing_tech%in%FT2 & supra_reg %in%"AREA37" & vessel_length%in%LOA3))

(OLD_DATA_KW<-rbind(OLD_DATA_KW_DTS,OLD_DATA_KW_PGP_1,OLD_DATA_KW_PGP_2))
(OLD_DATA_KW<-OLD_DATA_KW%>%arrange(year,fishing_tech,vessel_length))

# you need first to replicate the DF with all GSAS the same amount of GSAs you are working with 

data<-list()

for (i in 1: length(GSAs)){
  data[[i]]<-OLD_DATA_KW
OLD_DATA_KW_ALLGSA = do.call(rbind, data)
}

 nsegments<-6 # add here the amount of segments for each GSAs
(OLD_DATA_KW_ALLGSA<-OLD_DATA_KW_ALLGSA%>%arrange(year))
(OLD_DATA_KW_ALLGSA$sub_reg<-rep(rep(sort(GSAs),each=nsegments,length(c(firstyearSTECF:c(firstyear-1))))))

# now you need to duplicate the percentage Data frame of each analized GSAs for all the years ( 2008:2012)

data1<-list()

for (i in 1: length(unique(OLD_DATA_KW$year))){
  data1[[i]]<-ALLGSADTSPGP
OLD_DATA_KW_PERC = do.call(rbind, data1)
}

OLD_DATA_KW_PERC<-OLD_DATA_KW_PERC%>%arrange(FS)

(OLD_DATA_KW_ALLGSA$KW<-OLD_DATA_KW_ALLGSA$value*OLD_DATA_KW_PERC$PERC) # THIS is almost ready I need to add the copied 2006 and 2007 form 2008

# Please, check if something is missing
(OLD_DATA_KW4<-OLD_DATA_KW_ALLGSA[,c(1,2,8,3,4,9)])

# After a check we noted that in this case there is a missing data in 2008 the data of VL2440. We add the same amount of 2009. Other solutions could be used 
# At this point you need to create the absent 2006 and 2007 data, in this case we assumed those equal to the 2008 and 2009 data.
(OLD_DATA_KW3_2006<-OLD_DATA_KW4%>%filter(year%in%firstyearSTECF))

OLD_DATA_KW3_2006$year<-"2006"
OLD_DATA_KW3_2007<-OLD_DATA_KW3_2006
OLD_DATA_KW3_2007$year<-"2007"

(OLD_DATA_FULL<-rbind(OLD_DATA_KW3_2006,OLD_DATA_KW3_2007,OLD_DATA_KW4))
OLD_DATA_KW4<-OLD_DATA_FULL

# For some fleet segments ("VL1218", "VL1824", "VL2440") you need to duplicate vessels for the three metiers DEF, DWS and MDD

(OLD_DATA_KW4DUP_DTS<-OLD_DATA_KW4%>%filter(fishing_tech%in%FT1 & vessel_length!="VL0612"))
(OLD_DATA_KW4NODU_DTS<-OLD_DATA_KW4%>%filter(fishing_tech%in%FT1 &vessel_length%in%"VL0612"))
(OLD_DATA_KW4NODU_PGP<-OLD_DATA_KW4%>%filter(fishing_tech%in%FT2 & vessel_length%in%c("VL0012","VL1218")))
(OLD_DATA_KW4DUP_DEFKW<-OLD_DATA_KW4DUP_DWSKW<-OLD_DATA_KW4DUP_MDDKW<-OLD_DATA_KW4DUP_DTS)
(OLD_DATA_KW4DUP_DEFKW$Metier<-"DEF")
(OLD_DATA_KW4DUP_DWSKW$Metier<-"DWS")
(OLD_DATA_KW4DUP_MDDKW$Metier<-"MDD")
(OLD_DATADUPLICATEDKW<-rbind(OLD_DATA_KW4DUP_DEFKW,
                             OLD_DATA_KW4DUP_DWSKW,
                             OLD_DATA_KW4DUP_MDDKW)) # I duplicate the line of the three vessels length for the three metiers
OLD_DATA_KW4NODU_DTS$Metier<-"DEF"
(OLD_DATA_KW4NODU_DTS$gear<-"OTB")
(OLD_DATA_KW4NODU_DTS$Month<-0)
(OLD_DATA_KW4NODU_DTS$Unit<-"TotalKW")
(OLD_DATA_KW4NODU_DTS$Source<-"STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx")

(OLD_DATADUPLICATEDKW$gear<-"OTB")
(OLD_DATADUPLICATEDKW$Month<-0)
(OLD_DATADUPLICATEDKW$Unit<-"TotalKW")
(OLD_DATADUPLICATEDKW$Source<-"STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx")

(OLD_DATA_KW4NODU_PGP$Month<-0)
(OLD_DATA_KW4NODU_PGP$Unit<-"TotalKW")
(OLD_DATA_KW4NODU_PGP$Source<-"STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx")

(OLD_DATA_KW4NODU_DTS<-OLD_DATA_KW4NODU_DTS[,c(1:5,8,7,9,6,10,11)]%>%unite("FS",c(sub_reg:Metier), remove = T))
(OLD_DATADUPLICATEDKW<-OLD_DATADUPLICATEDKW[,c(1:5,8,7,9,6,10,11)]%>%unite("FS",c(sub_reg:Metier), remove = T))
(OLD_DATA_KW4NODU_PGP<-OLD_DATA_KW4NODU_PGP%>%unite("FS",c(sub_reg:vessel_length), remove = T))

(FINALKWX<-rbind(OLD_DATA_KW4NODU_DTS,OLD_DATADUPLICATEDKW,OLD_DATA_KW4NODU_PGP))
colnames(FINALKWX)[2]<-"Year"
(FINALKWX<-FINALKWX%>%arrange(Year,FS))

# Finally you may add the two data frame RECENT + OLD 
colnames(DATA_KW)[2]<-"Year"
colnames(DATA_KW)[4]<-"KW"

(BIGDFKW<-rbind(FINALKWX,DATA_KW))


#check the size and rows of the two data base 

#check the size and rows of the two data base 
FT_remove<-c("GSA17_DTS_VL0612_OTB_MDD","GSA17_DTS_VL0612_OTB_DWS","GSA17_DTS_VL2440_OTB_DWS",
             "GSA18_DTS_VL0612_OTB_MDD","GSA18_DTS_VL0612_OTB_DWS","GSA18_DTS_VL2440_OTB_DWS",
             "GSA19_DTS_VL0612_OTB_MDD","GSA19_DTS_VL0612_OTB_DWS","GSA19_DTS_VL2440_OTB_DWS")

(BIGDFKW<-BIGDFKW%>%filter(!FS%in%FT_remove))  # In our ezample we dicided to remove some FS. If you want all the FS, please remove this line. 

# add the current year of the assessment assuming current year = to the last availabel year 

(BIGDFKW_lastyear<-BIGDFKW%>%filter(Year%in%lastyear))
(currentyear<-lastyear+1)
BIGDFKW_lastyear[,2]<-currentyear
(BIGDFKW<-rbind(BIGDFKW,BIGDFKW_lastyear))

write.csv(BIGDFKW,"D:/Andrea/Desktop/DFKW_metier_17_18_19.csv", row.names=F) 

Fleet_segments<-unique(BIGDFKW$FS)

#dir.create("BMT_INPUT")

ts<-c(2006:c(lastyear+1))
trans_year=c(lastyear+1)

#KW
(KW_data=BIGDFKW)

#library(tidyverse)
#pollo<-Days_data%>%group_by(FS)%>%summarise(Days =sum(Days))
#pollo$FS

(KW_data=KW_data[KW_data$Year %in% ts & KW_data$FS %in% Fleet_segments,])

(DF1=matrix(0,nrow=12,ncol=length(ts)))
(colnames(DF1)=ts)
(rownames(DF1)=seq(1,12,1))

# Fleet_segments[1]
(KW_data_temp=KW_data[KW_data$FS==Fleet_segments[1],])

for (rr in 1:nrow(KW_data_temp)){
  
  year=KW_data_temp$Year[rr] 
  month=KW_data_temp$Month[rr]
  #unit=KW_data_temp$Unit[rr]
  
  if (month!=0){
    DF1[rownames(DF1)==month,colnames(DF1)==year]=KW_data_temp$KW[rr]
  } else if (month==0){
    DF1[,colnames(DF1)==year]=KW_data_temp$KW[rr]
  }  
  
}

(DF1[,colnames(DF1) %in% trans_year]= DF1[,as.numeric(colnames(DF1)) == (trans_year[1]-1)])

for (fs in Fleet_segments[-1]){
  
  print(fs,quote=F)
  DF_next=matrix(0,nrow=12,ncol=length(ts))
  colnames(DF_next)=ts
  rownames(DF_next)=seq(1,12,1)
  
  # Fleet_segments[1]
  KW_data_temp=KW_data[KW_data$FS==fs,]
  
  for (rr in 1:nrow(KW_data_temp)){
    
    year=KW_data_temp$Year[rr] 
    month=KW_data_temp$Month[rr]
    unit=KW_data_temp$Unit[rr]
    
    if (month!=0){
      DF_next[rownames(DF_next)==month,colnames(DF_next)==year]=KW_data_temp$KW[rr]  
      
    } else if (month==0){
      
      DF_next[,colnames(DF_next)==year]=KW_data_temp$KW[rr]  
    }  
    
  }
  
  DF_next[,colnames(DF_next) %in% trans_year]= DF_next[,as.numeric(colnames(DF_next)) == (trans_year[1]-1)]
  
  DF1=cbind(DF1,DF_next)
  
} # ciclo FS

KW=DF1

#VESSELS
(Vess_data=FINALDF) # FROM VESSEL SCRIPT 

(Vess_data=Vess_data[Vess_data$Year %in% ts & Vess_data$FS %in% Fleet_segments,])

(DF1=matrix(0,nrow=12,ncol=length(ts)))
(colnames(DF1)=ts)
(rownames(DF1)=seq(1,12,1))

# Fleet_segments[1]
(Vess_data_temp=Vess_data[Vess_data$FS==Fleet_segments[1],])

for (rr in 1:nrow(Vess_data_temp)){
  
  year=Vess_data_temp$Year[rr] 
  month=Vess_data_temp$Month[rr]
  #unit=Vess_data_temp$Unit[rr]
  
  if (month!=0){
    DF1[rownames(DF1)==month,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  } else if (month==0){
    DF1[,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  }  
  
}



(DF1[,colnames(DF1) %in% trans_year]= DF1[,as.numeric(colnames(DF1)) == (trans_year[1]-1)])

for (fs in Fleet_segments[-1]){
  
  print(fs,quote=F)
  DF_next=matrix(0,nrow=12,ncol=length(ts))
  colnames(DF_next)=ts
  rownames(DF_next)=seq(1,12,1)
  
  # Fleet_segments[1]
  Vess_data_temp=Vess_data[Vess_data$FS==fs,]
  
  for (rr in 1:nrow(Vess_data_temp)){
    
    year=Vess_data_temp$Year[rr] 
    month=Vess_data_temp$Month[rr]
    unit=Vess_data_temp$Unit[rr]
    
    if (month!=0){
      DF_next[rownames(DF_next)==month,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
      
    } else if (month==0){
      
      DF_next[,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
    }  
    
  }
  DF_next[,colnames(DF_next) %in% trans_year]= DF_next[,as.numeric(colnames(DF_next)) == (trans_year[1]-1)]
  
  DF1=cbind(DF1,DF_next)
  
} # ciclo FS

(Vess=DF1)

(Avg_KW=KW/Vess)

for (f in 1:length(Fleet_segments)){
  ini=1+(f-1)*length(ts)
  fin=(f)*length(ts)
  if (length(Vess[,ini:fin][which(Vess[,ini:fin]==0)])>0){
    Avg_KW[,ini:fin][Vess[,ini:fin]==0] = mean(Avg_KW[,ini:fin][Vess[,ini:fin]!=0],na.rm=T )  
  }
}

# 
# for (f in 1:lenKWh(Fleet_segments)){
#   print(Fleet_segments[f])
#   ini=1 +(f-1)*lenKWh(ts)
#   fin=(f)*lenKWh(ts)
#   if (lenKWh(DF1[,ini:fin][which(DF1[,ini:fin]==0)])>0){
#     DF1[,ini:fin][which(DF1[,ini:fin]==0)] = mean(DF1[,ini:fin][which(DF1[,ini:fin]!=0)]) 
#   }
# }

#FirstRow=t(data.frame(rep(ts,lenKWh(Fleet_segments))))
#FirstRow=c("Units: kg",FirstRow)

(SecondRow=t(data.frame(rep(Fleet_segments[1],length(ts)))  ))

for (fs in Fleet_segments[-1]){
  print(fs)
  SecondRow2=t(data.frame(rep(fs,length(ts))))
  
  SecondRow=cbind(SecondRow,SecondRow2) 
  
}

empty_row=t(data.frame(rep("",length(SecondRow))))

(DF_final=(rbind(SecondRow,empty_row,empty_row)))

(DF_final=rbind(DF_final,as.matrix(Avg_KW)))

DF_final= cbind(c(
  "casestudy.fleetsegmentcode",
  "casestudy.fishinKWechnique",
  "casestudy.loa",
  "casestudy.month1",
  "casestudy.month2",
  "casestudy.month3",
  "casestudy.month4",
  "casestudy.month5",
  "casestudy.month6",
  "casestudy.month7",
  "casestudy.month8",
  "casestudy.month9",
  "casestudy.month10",
  "casestudy.month11",
  "casestudy.month12"),DF_final)

colnames(DF_final)[1]="Units: KW"
# Please add you directory and save the file as .csv
write.table(DF_final,"D:/Andrea/Desktop/KW_17_18_19.csv", sep=";",row.names=F) 
```
