---
title: "9) BEMTool Days at sea"
author: "Andrea Pierucci and Isabella Bitetto"
date: '2022-03-25'
output:
  #bookdown::pdf_book:
  pdf_document: default
  #html_document: default
header-includes:
    - \usepackage{ragged2e}
    - \usepackage{multirow}
    - \usepackage{setspace}\doublespacing
---

```{r}
# packages requested
rm(list=ls())

FINALDF<-read.csv("D:\\Andrea\\Desktop\\revision Bemtool\\fleetsegment\\vessel\\FINALDF_VESSEL_17_18_19.csv")

library(readxl)
library(tidyverse)
library(tidyr)

# STEP  1 #===================================================================

# Below an example of fishing days.csv file for BEMTool.
# For this example we use Italian FDI official data Table G (EFFORT)
# set your working directory 
wd<-"D:/Andrea/Desktop/FISH Stock Assessment/STECF 2022/Effort regime/SET/DATA/FDI"
(RECENTDATADAY<-read.csv(paste0(wd,"/tableG_EWG2211.csv"), sep = ","))

COUNTRY<-"ITA"
GSAs<-c("GSA17","GSA18","GSA19") # selesct your gsas
FT1<-c("DTS") 
LOA1<-c("VL0612","VL1218","VL1824","VL2440")
firstyear<- 2013 # first year of your available data 
lastyear<- 2021 # define the last available year of your data 
# ===================================== DTS 
(DATA_DAY_A<-RECENTDATADAY%>% 
    select(country_code,year,quarter,vessel_length,fishing_tech,sub_region,totseadays)%>%
    filter(country_code%in%COUNTRY & fishing_tech%in%FT1 & vessel_length%in%LOA1 & sub_region%in%GSAs)%>%
    group_by(country_code,year,quarter,vessel_length,fishing_tech,sub_region)%>%
    summarise(totseadays=sum(totseadays)))

# You need to check if you have all the segments in all GSAs and all years 
(Vessel.Length.Category<-rep(rep(rep(unique(DATA_DAY_A$vessel_length),4),length(GSAs)),length(c(firstyear:lastyear))))
(quarters<-rep(rep(rep(c(1:4),each=length(unique(DATA_DAY_A$vessel_length))),length(unique(DATA_DAY_A$year))),length(GSAs)))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_DAY_A$vessel_length))*4)),length(GSAs)))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,quarters,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT1)
(data_check$totseadays<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_DAY_A<-DATA_DAY_A[,c(1,2,3,6,5,4,7)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(5,3,2,4,6,1,7)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(DATA_DAY_A<-merge(DATA_DAY_A,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_DAY_A[is.na(DATA_DAY_A)] = 0.00001)
(DATA_DAY_A<-DATA_DAY_A[,c(1,2)])
colnames(DATA_DAY_A)[2]<-"totseadays"

# I need to add the gear for label consistency 
DATA_DAY_A$gear<-"OTB"
(DATA_DAY_A<-separate(DATA_DAY_A, col=FS, into=c("A","B","C","D","E","FF"), sep="_"))
(DATA_DAY_A<-DATA_DAY_A[,c(1,2,3,4,5,6,8,7)]%>%unite("FS",D:gear, remove = T, sep = "_"))
colnames(DATA_DAY_A)[1]<-"country_code"
colnames(DATA_DAY_A)[2]<-"year"
colnames(DATA_DAY_A)[3]<-"quarter"

# At this time a need to aggregate pgp VL0006 with VL0612 as VL0012. This kind of aggregation are defined by the user.
#==================================== PGP 

# below some aggregation for some PGP LOA
# this aggregation are totally arbitrary 

FT2<-"PGP"
LOA2<-c("VL0006","VL0612")
LOA3<-c("VL1218")

(DATA_DAY_B1<-RECENTDATADAY%>% 
    select(country_code,year,quarter,vessel_length,fishing_tech,sub_region,totseadays)%>%
    filter(country_code%in%COUNTRY & fishing_tech%in%FT2 & vessel_length%in%LOA2 & sub_region%in%GSAs)%>%
    group_by(country_code,year,quarter,fishing_tech,sub_region)%>%
    summarise(totseadays=sum(totseadays)))

DATA_DAY_B1$vessel_length<-"VL0012"

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(rep(unique(DATA_DAY_B1$vessel_length),4),length(GSAs)),length(c(firstyear:lastyear))))
(quarters<-rep(rep(rep(c(1:4),each=length(unique(DATA_DAY_B1$vessel_length))),length(unique(DATA_DAY_B1$year))),length(GSAs)))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_DAY_B1$vessel_length))*4)),length(GSAs)))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,quarters,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$totseadays<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_DAY_B1<-DATA_DAY_B1[,c(1,2,3,5,4,7,6)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(5,3,2,4,6,1,7)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(DATA_DAY_B1<-merge(DATA_DAY_B1,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_DAY_B1[is.na(DATA_DAY_B1)] = 0.00001)
(DATA_DAY_B1<-DATA_DAY_B1[,c(1,2)])
colnames(DATA_DAY_B1)[2]<-"totseadays"

(DATA_DAY_B2<-RECENTDATADAY%>%
    select(country_code,year,quarter,vessel_length,sub_region,fishing_tech,totseadays)%>%
    filter(country_code%in%COUNTRY & fishing_tech%in%FT2 & vessel_length%in%LOA3 & sub_region%in%GSAs)%>%
    group_by(country_code,year,quarter,sub_region,fishing_tech,vessel_length)%>%
    summarise(totseadays=sum(as.numeric(totseadays))))

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(rep(unique(DATA_DAY_B2$vessel_length),4),length(GSAs)),length(c(firstyear:lastyear))))
(quarters<-rep(rep(rep(c(1:4),each=length(unique(DATA_DAY_B2$vessel_length))),length(unique(DATA_DAY_B2$year))),length(GSAs)))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(DATA_DAY_B2$vessel_length))*4)),length(GSAs)))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(Vessel.Length.Category,quarters,year,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$totseadays<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_DAY_B2<-DATA_DAY_B2%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(5,3,2,4,6,1,7)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(DATA_DAY_B2<-merge(DATA_DAY_B2,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_DAY_B2[is.na(DATA_DAY_B2)] = 0.00001)
(DATA_DAY_B2<-DATA_DAY_B2[,c(1,2)])
colnames(DATA_DAY_B2)[2]<-"totseadays"
(DATA_DAY_B12<-rbind(DATA_DAY_B1,DATA_DAY_B2))
(DATA_DAY_B12<-separate(DATA_DAY_B12, col=FS, into=c("A","B","C","D","E","FF"), sep="_"))
(DATA_DAY_B12<-DATA_DAY_B12%>%unite("FS",D:FF, remove = T, sep = "_"))
colnames(DATA_DAY_B12)[1]<-"country_code"
colnames(DATA_DAY_B12)[2]<-"year"
colnames(DATA_DAY_B12)[3]<-"quarter"
(DATA_DAY<-rbind(DATA_DAY_A,DATA_DAY_B12))
# now I need to split each quarter in 3 
(DATA_DAY<-rbind(DATA_DAY,DATA_DAY,DATA_DAY))
(DATA_DAY<-DATA_DAY%>%arrange(year,FS,quarter))
(DATA_DAY$true_totseadays<-DATA_DAY$totseadays/3)
(DATA_DAY$Month<-c(1:12))
DATA_DAY$Unit<-"Days"
DATA_DAY$Source<-"FDI_capacity_by_country"
(DATA_DAY<-DATA_DAY[,c(1,2,4,7,6,8,9)])
colnames(DATA_DAY)[5]<-"totseadays"

(DATA_DAY<-separate(DATA_DAY, col=FS, into=c("A","B","C"), sep="_"))
colnames(DATA_DAY)[3]<-"sub_reg"
colnames(DATA_DAY)[4]<-"fishing_tech"
colnames(DATA_DAY)[5]<-"vessel_length"

# Test 2 #=================================================================================================
# Here the extraction of the data from 2008 to 2013

dir<-"D:/Andrea/Desktop/NEW_BEMTool/2018-07_STECF_18-07-EU_Fleet_Effort_FAO_Gear_levels_final.xlsx"

(OLD_DATA_DAYS<-read_xlsx(dir, sheet = 2))
(OLD_DATA_DAYS<-separate(OLD_DATA_DAYS, col=sub_reg, into=c("A","B"), sep=" "))
(OLD_DATA_DAYS$A[OLD_DATA_DAYS$A=="sa"]<-"GSA")
(OLD_DATA_DAYS<-OLD_DATA_DAYS%>%unite("sub_reg",A:B, remove = T, sep = ""))

# DTS =============================

CC<-"ITA"
firstyearSTECF<-2008 # indicate the first year of FDI available data at a GSAs level

(OLD_DATA_DAYS_DTS<-OLD_DATA_DAYS%>%
    select(country_code,year,fishing_tech,variable_code,sub_reg,vessel_length,value,unit)%>%
    filter(country_code%in%CC & year<firstyear & variable_code%in%"totseadays" & fishing_tech%in%FT1  & vessel_length%in%LOA1 & sub_reg%in%GSAs))

# I need to add a table check also here 

(Vessel.Length.Category<-rep(rep(sort(unique(OLD_DATA_DAYS_DTS$vessel_length)),length(c(firstyearSTECF:c(firstyear-1)))),length(GSAs)))
(year<-rep(rep(c(firstyearSTECF:c(firstyear-1)),each=(length(unique(OLD_DATA_DAYS_DTS$vessel_length)))),length(GSAs)))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(data_check<-data.frame(year,principal.sub.region,Vessel.Length.Category))
(data_check$country_code<-CC)
(data_check$fishing_tech<-FT1)
(data_check$value<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.

(OLD_DATA_DAYS_DTS<-OLD_DATA_DAYS_DTS[,c(1,2,5,3,6,7)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,2,5,3,6)]%>%unite("FS",country_code:Vessel.Length.Category, remove = T, sep = "_"))
(OLD_DATA_DAYS_DTS<-merge(OLD_DATA_DAYS_DTS,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_DAYS_DTS[is.na(OLD_DATA_DAYS_DTS)] = 0.00001)
(OLD_DATA_DAYS_DTS<-OLD_DATA_DAYS_DTS[,c(1,2)])
colnames(OLD_DATA_DAYS_DTS)[2]<-"totseadays"

# ==================================== PGP

(OLD_DATA_DAYS_PGP_1<-OLD_DATA_DAYS%>%
    select(country_code,year,fishing_tech,variable_code,sub_reg,vessel_length,value,unit)%>%
    filter(country_code%in%CC & year<firstyear & variable_code%in%"totseadays" & fishing_tech%in%FT2 & vessel_length%in%LOA2 & sub_reg%in%GSAs)%>%
    group_by(country_code,year,fishing_tech,variable_code,sub_reg,unit)%>%
    summarise(value=sum(as.numeric(value))))

OLD_DATA_DAYS_PGP_1$vessel_length<-"VL0012"

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(OLD_DATA_DAYS_PGP_1$vessel_length),length(GSAs)),length(c(firstyear:lastyear))))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(OLD_DATA_DAYS_PGP_1$vessel_length)))),length(GSAs)))
  
(data_check<-data.frame(year,Vessel.Length.Category,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$value<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(OLD_DATA_DAYS_PGP_1<-OLD_DATA_DAYS_PGP_1[,c(1,2,5,3,8,7)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,3,5,2,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(OLD_DATA_DAYS_PGP_1<-merge(OLD_DATA_DAYS_PGP_1,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_DAYS_PGP_1[is.na(OLD_DATA_DAYS_PGP_1)] = 0.00001)
(OLD_DATA_DAYS_PGP_1<-OLD_DATA_DAYS_PGP_1[,c(1,2)])
colnames(OLD_DATA_DAYS_PGP_1)[2]<-"totseadays"

(OLD_DATA_DAYS_PGP_2<-OLD_DATA_DAYS%>%
    select(country_code,year,fishing_tech,variable_code,sub_reg,vessel_length,value,unit)%>%
    filter(country_code%in%CC & year<firstyear & variable_code%in%"totseadays" & fishing_tech%in%FT2 & vessel_length%in%LOA3 & sub_reg%in%GSAs)%>%
    group_by(country_code,year,fishing_tech,variable_code,sub_reg,vessel_length,unit)%>%
    summarise(value=sum(as.numeric(value))))

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(OLD_DATA_DAYS_PGP_2$vessel_length),length(GSAs)),length(c(firstyear:lastyear))))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(year<-rep(rep(c(firstyear:lastyear),each=(length(unique(OLD_DATA_DAYS_PGP_2$vessel_length)))),length(GSAs)))
  
(data_check<-data.frame(year,Vessel.Length.Category,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$value<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(OLD_DATA_DAYS_PGP_2<-OLD_DATA_DAYS_PGP_2[,c(1,2,5,3,6,8)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,3,5,2,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(OLD_DATA_DAYS_PGP_2<-merge(OLD_DATA_DAYS_PGP_2,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_DAYS_PGP_2[is.na(OLD_DATA_DAYS_PGP_2)] = 0.00001)
(OLD_DATA_DAYS_PGP_2<-OLD_DATA_DAYS_PGP_2[,c(1,2)])
colnames(OLD_DATA_DAYS_PGP_2)[2]<-"totseadays"

(OLD_DATA_DAYS<-rbind(OLD_DATA_DAYS_DTS,OLD_DATA_DAYS_PGP_1,OLD_DATA_DAYS_PGP_2))

(OLD_DATA_DAYS<-separate(OLD_DATA_DAYS, col=FS, into=c("A","B","C","D","FF"), sep="_"))
colnames(OLD_DATA_DAYS)[1]<-"country_code"
colnames(OLD_DATA_DAYS)[2]<-"year"
colnames(OLD_DATA_DAYS)[3]<-"sub_reg"
colnames(OLD_DATA_DAYS)[4]<-"fishing_tech"
colnames(OLD_DATA_DAYS)[5]<-"vessel_length"

# Some time you have some missing data in some specific years. 
# NB all the csv INPUT file in BMT shall have the same time series length. 
# In this example you need to create the absent 2006 and 2007 data equal to 2008. 

(OLD_DATA_2006<-OLD_DATA_DAYS%>%filter(year%in%firstyearSTECF))

# some time there are missing values or segments please check it with the following lines and add for missing values

(Vessel.Length.Category<-rep(c(sort(unique(OLD_DATA_DAYS$vessel_length))[2:5],sort(unique(OLD_DATA_DAYS$vessel_length))[c(1,3)]),length(GSAs)))
(principal.sub.region<-rep(GSAs,each=(length(Vessel.Length.Category)/length(GSAs))))
(Fishing.Technique<-rep(c(rep(FT1,4),rep(FT2,2)),length(GSAs)))

(data_check<-data.frame(Vessel.Length.Category,principal.sub.region,Fishing.Technique))
(data_check$Country.name<-COUNTRY)
(data_check$year<-firstyearSTECF)
(data_check$totseadays<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(OLD_DATA_2006<-OLD_DATA_2006%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))

(data_check<-data_check[,c(4,5,2,3,1,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(OLD_DATA_DAYS_plus<-merge(OLD_DATA_2006,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_DAYS_plus[is.na(OLD_DATA_DAYS_plus)] = 0.00001)
(OLD_DATA_DAYS_plus<-OLD_DATA_DAYS_plus[,c(1,3)])
colnames(OLD_DATA_DAYS_plus)[2]<-"totseadays"

(OLD_DATA_DAYS_plus<-separate(OLD_DATA_DAYS_plus, col=FS, into=c("A","B","C","D","E"), sep="_"))

colnames(OLD_DATA_DAYS_plus)[1]<-"country_code"
colnames(OLD_DATA_DAYS_plus)[2]<-"year"
colnames(OLD_DATA_DAYS_plus)[3]<-"sub_reg"
colnames(OLD_DATA_DAYS_plus)[4]<-"fishing_tech"
colnames(OLD_DATA_DAYS_plus)[5]<-"vessel_length"

(OLD_DATA_DAYS_plus_2006<-OLD_DATA_DAYS_plus_2007<-OLD_DATA_DAYS_plus)
OLD_DATA_DAYS_plus_2007$year<-"2007"
OLD_DATA_DAYS_plus_2006$year<-"2006"

# merge all the old data set 
(OLD_DATA_DAYS<-rbind(OLD_DATA_DAYS_plus_2006,OLD_DATA_DAYS_plus_2007,OLD_DATA_DAYS))

##############
OLD_DATA_DAYS$Source<-"STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment"
OLD_DATA_DAYS$Month<-0 
OLD_DATA_DAYS$unit<-"Days"
colnames(OLD_DATA_DAYS)[9]<-"Unit"
(OLD_DATA_DAYS<-OLD_DATA_DAYS[,c(1:5,8,6,9,7)])

(OLD_DATA_DAYS<-OLD_DATA_DAYS%>%unite("FS",c(sub_reg:vessel_length), remove = T))

# duplicate the data frame for the 12 months and after / by 12 for the value by month

data<-list()

for (i in 1:12){
  data[[i]]<-OLD_DATA_DAYS
OLD_DATA_DAYS_DUP = do.call(rbind, data)
}

OLD_DATA_DAYS<-OLD_DATA_DAYS%>%arrange(year,FS)
OLD_DATA_DAYS$totseadays<-OLD_DATA_DAYS$totseadays/12

(OLD_DATA_DAYS<-separate(OLD_DATA_DAYS, col=FS, into=c("A","B","C"), sep="_"))

colnames(OLD_DATA_DAYS)[3]<-"sub_reg"
colnames(OLD_DATA_DAYS)[4]<-"fishing_tech"
colnames(OLD_DATA_DAYS)[5]<-"vessel_length"

(BIGDF<-rbind(OLD_DATA_DAYS,DATA_DAY))


(BIGDF_DTS<-BIGDF%>%filter(vessel_length%in%LOA1 & fishing_tech%in%FT1))#segment ok
(BIGDF_DTS$gear<-"OTB")
(BIGDF_DTS<-BIGDF_DTS[,c(1,2,3,4,5,10,6,7,8,9)]%>%unite("FS",c(sub_reg:gear), remove = T))
(BIGDF_PGP<-BIGDF%>%filter(fishing_tech%in%FT2))
(BIGDF_PGP<-BIGDF_PGP%>%unite("FS",c(sub_reg:vessel_length), remove = T))

(FINALDFDAY<-rbind(BIGDF_DTS,BIGDF_PGP))
(FINALDFDAY<-FINALDFDAY[,c(2:7)])
colnames(FINALDFDAY)[1]<-"Year"
colnames(FINALDFDAY)[4]<-"Days"

(FINALDFDAY$Days<-round(as.numeric(FINALDFDAY$Days)))
(FINALDFDAY<-FINALDFDAY%>%arrange(FS,Year,Month))

# Please add you repository 
write.table(FINALDFDAY,"D:/Andrea/Desktop/FINALDFDAY_17_18_19.csv",sep=";",row.names=F)      

Fleet_segments<-unique(FINALDFDAY$FS) 

ts<-c(2006:c(lastyear+1))

trans_year=c(lastyear+1)

# Days

# library(tidyverse)
Days_data<-FINALDFDAY

(DF1=matrix(0,nrow=12,ncol=length(ts)))
(colnames(DF1)=ts)
(rownames(DF1)=seq(1,12,1))

(Days_data_temp=Days_data[Days_data$FS==Fleet_segments[1],])

for (rr in 1:nrow(Days_data_temp)){
  
  year=Days_data_temp$Year[rr] 
  month=Days_data_temp$Month[rr]
  #unit=Days_data_temp$Unit[rr]
  
  if (month!=0){
    DF1[rownames(DF1)==month,colnames(DF1)==year]=Days_data_temp$Days[rr]
  } else if (month==0){
    DF1[,colnames(DF1)==year]=Days_data_temp$Days[rr] # /12 check here. If your data are not by month add "/12"
  }  
  
}

(DF1[,colnames(DF1) %in% trans_year]=DF1[,as.numeric(colnames(DF1)) == (trans_year[1]-1)])

for (fs in Fleet_segments[-1]){
  
  print(fs,quote=F)
  DF_next=matrix(0,nrow=12,ncol=length(ts))
  colnames(DF_next)=ts
  rownames(DF_next)=seq(1,12,1)
  
  # Fleet_segments[1]
  
  Days_data_temp=Days_data[Days_data$FS==fs,]
  
  for (rr in 1:nrow(Days_data_temp)){
    
    year=Days_data_temp$Year[rr] 
    month=Days_data_temp$Month[rr]
    unit=Days_data_temp$Unit[rr]
    
    if (month!=0){
      DF_next[rownames(DF_next)==month,colnames(DF_next)==year]=Days_data_temp$Days[rr]  
      
    } else if (month==0){
      
      DF_next[,colnames(DF_next)==year]=Days_data_temp$Days[rr]  
    }  
    
  }
  
  (DF_next[,colnames(DF_next) %in% trans_year]= DF_next[,as.numeric(colnames(DF_next)) == (trans_year[1]-1)])
  
  DF1=cbind(DF1,DF_next)
  
} # cycle FS

Days=DF1

# VESSELS

(Vess_data=FINALDF)

(Vess_data=Vess_data[Vess_data$Year %in% ts & Vess_data$FS %in% Fleet_segments,])

(DF1=matrix(0,nrow=12,ncol=length(ts)))
(colnames(DF1)=ts)
(rownames(DF1)=seq(1,12,1))

#Fleet_segments[1]
(Vess_data_temp=Vess_data[Vess_data$FS==Fleet_segments[1],])

for (rr in 1:nrow(Vess_data_temp)){
  
  year=Vess_data_temp$Year[rr] 
  month=Vess_data_temp$Month[rr]
  #unit=Vess_data_temp$Unit[rr]
  
  if (month!=0){
    DF1[rownames(DF1)==month,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  } else if (month==0){
    DF1[,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  }  
  
}

(DF1[,colnames(DF1) %in% trans_year]= DF1[,as.numeric(colnames(DF1)) == (trans_year[1]-1)])

for (fs in Fleet_segments[-1]){
  
  print(fs,quote=F)
  DF_next=matrix(0,nrow=12,ncol=length(ts))
  colnames(DF_next)=ts
  rownames(DF_next)=seq(1,12,1)
  
  # Fleet_segments[1]
  Vess_data_temp=Vess_data[Vess_data$FS==fs,]
  
  for (rr in 1:nrow(Vess_data_temp)){
    
    year=Vess_data_temp$Year[rr] 
    month=Vess_data_temp$Month[rr]
    unit=Vess_data_temp$Unit[rr]
    
    if (month!=0){
      DF_next[rownames(DF_next)==month,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
      
    } else if (month==0){
      
      DF_next[,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
    }  
    
  }
  DF_next[,colnames(DF_next) %in% trans_year]= DF_next[,as.numeric(colnames(DF_next)) == (trans_year[1]-1)]
  
  DF1=cbind(DF1,DF_next)
  
} # cycle FS

(Vess=DF1)

for (f in 1:length(Fleet_segments)){
  ini=1+(f-1)*length(ts)
  fin=(f)*length(ts)
  Vess[which(Days==0)][ini:fin] = mean(Vess[,ini:fin],na.rm=T )  
}

(Avg_days=round(Days/Vess))

#FirstRow=t(data.frame(rep(ts,length(Fleet_segments))))
#FirstRow=c("Units: kg",FirstRow)

(SecondRow=t(data.frame(rep(Fleet_segments[1],length(ts)))  ))

for (fs in Fleet_segments[-1]){
  print(fs)
  SecondRow2=t(data.frame(rep(fs,length(ts))))
  
  SecondRow=cbind(SecondRow,SecondRow2) 
  
}

(empty_row=t(data.frame(rep("",length(SecondRow)))))

(DF_final=(rbind(SecondRow,empty_row,empty_row)))

(DF_final=rbind(DF_final,as.matrix(Avg_days)))

DF_final= cbind(c(     "casestudy.fleetsegmentcode",
                       "casestudy.fishingtechnique",
                       "casestudy.loa",
                       "casestudy.month1",
                       "casestudy.month2",
                       "casestudy.month3",
                       "casestudy.month4",
                       "casestudy.month5",
                       "casestudy.month6",
                       "casestudy.month7",
                       "casestudy.month8",
                       "casestudy.month9",
                       "casestudy.month10",
                       "casestudy.month11",
                       "casestudy.month12"
),DF_final)

colnames(DF_final)[1]="Units: days"
write.table(DF_final,"D:/Andrea/Desktop/NEW_TEST_DAYS_17_18_19.csv",sep=";",row.names=F)  
```
