---
title: "6) BEMTool Number of vessels"
author: "Andrea Pierucci and Isabella Bitetto"
date: '2022-11-03'
output:
  #bookdown::pdf_book:
  pdf_document: default
  #html_document: default
header-includes:
    - \usepackage{ragged2e}
    - \usepackage{multirow}
    - \usepackage{setspace}\doublespacing
---

```{r}
# packages requested 

library(readxl)
library(tidyverse)
library(tidyr)

# STEP  1 #===================================================================

# Below an example of vessels.csv file for BEMTool.
# For this example we use Italian FDI official data Table J (Capacity)
# set your working directory
wd<-"D:/Andrea/Desktop/FISH Stock Assessment/STECF 2022/Effort regime/SET/DATA/FDI"
(RECENTDATA2<-read.csv(paste0(wd,"/tableJ_EWG2211.csv"), sep = ";"))

# Below I select my fleet segments and the GSAs I need ( GSA9 )

COUNTRY<-"Italy"
FT1<-"DTS"
LOA<-c("VL0612" ,"VL1218", "VL1824", "VL2440")
AREA<-c("GSA9","GSA10")
lastyear<- 2021 # define the last available year of your data 
# ===================================== DTS 
(DATA_2_A<-RECENTDATA2%>% 
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,total.vessels)%>%
    filter(Country.name%in%COUNTRY &  Fishing.Technique%in% FT1 & Vessel.Length.Category%in%LOA & principal.sub.region%in%AREA))

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(DATA_2_A$Vessel.Length.Category),length(AREA)),length(unique(DATA_2_A$year))))
(principal.sub.region<-rep(AREA,each=(length(Vessel.Length.Category)/length(AREA))))
(year<-rep(rep(unique(DATA_2_A$year),each=(length(unique(DATA_2_A$Vessel.Length.Category)))),length(AREA)))
  
(data_check<-data.frame(year,Vessel.Length.Category,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT1)
(data_check$total.vessels<-0)
# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_A<-DATA_2_A[,c(1,2,5,4,3,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,3,5,2,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(DATA_2_A<-merge(DATA_2_A,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_A[is.na(DATA_2_A)] = 0.00001)
(DATA_2_A<-DATA_2_A[,c(1,2)])
colnames(DATA_2_A)[2]<-"total.vessels"
# I need to add the gear for lable consistency 
DATA_2_A$gear<-"OTB"
(DATA_2_A<-separate(DATA_2_A, col=FS, into=c("A","B","C","D","FF"), sep="_"))
(DATA_2_A<-DATA_2_A[,c(1,2,3,4,5,7,6)]%>%unite("FS",C:gear, remove = T, sep = "_"))

# At this time a need to aggregate pgp VL0006 with VL0612 as VL0012. This kind of aggregation are defined by the user.
#==================================== PGP 

FT2<-"PGP"
LOA<-c("VL0006","VL0612")

(DATA_2_B1<-RECENTDATA2%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,total.vessels)%>%
    filter(Country.name%in%COUNTRY & Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA & principal.sub.region%in%AREA)%>%
    group_by(Country.name,year,Fishing.Technique,principal.sub.region)%>%
    summarise(total.vessels=sum(as.numeric(total.vessels))))

DATA_2_B1$Vessel.Length.Category<-"VL0012"
DATA_2_B1<-DATA_2_B1[,c(1,2,4,3,6,5)]

# You need to check if you have all the segments in all GSAs and all years 

(Vessel.Length.Category<-rep(rep(unique(DATA_2_B1$Vessel.Length.Category),length(AREA)),length(unique(DATA_2_B1$year))))
(principal.sub.region<-rep(AREA,each=(length(Vessel.Length.Category)/length(AREA))))
(year<-rep(rep(unique(DATA_2_B1$year),each=(length(unique(DATA_2_B1$Vessel.Length.Category)))),length(AREA)))
  
(data_check<-data.frame(year,Vessel.Length.Category,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$total.vessels<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_B1<-DATA_2_B1%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,3,5,2,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(DATA_2_B1<-merge(DATA_2_B1,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_B1[is.na(DATA_2_B1)] = 0.00001)
(DATA_2_B1<-DATA_2_B1[,c(1,2)])
colnames(DATA_2_B1)[2]<-"total.vessels"

LOA<-c("VL1218")

(DATA_2_B2<-RECENTDATA2%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,total.vessels)%>%
    filter(Country.name%in%COUNTRY &  Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA & principal.sub.region%in%AREA))

# You need to check if you have all the segments in all GSAs and all years 
(Vessel.Length.Category<-rep(rep(unique(DATA_2_B2$Vessel.Length.Category),length(AREA)),length(unique(DATA_2_B2$year))))
(principal.sub.region<-rep(AREA,each=(length(Vessel.Length.Category)/length(AREA))))
(year<-rep(rep(unique(DATA_2_B2$year),each=(length(unique(DATA_2_B2$Vessel.Length.Category)))),length(AREA)))
  
(data_check<-data.frame(year,Vessel.Length.Category,principal.sub.region))
(data_check$Country.name<-COUNTRY)
(data_check$Fishing.Technique<-FT2)
(data_check$total.vessels<-0)

# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.
(DATA_2_B2<-DATA_2_B2[,c(1,2,5,4,3,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))
(data_check<-data_check[,c(4,1,3,5,2,6)]%>%unite("FS",Country.name:Vessel.Length.Category, remove = T, sep = "_"))

(DATA_2_B2<-merge(DATA_2_B2,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(DATA_2_B2[is.na(DATA_2_B2)] = 0.00001)
(DATA_2_B2<-DATA_2_B2[,c(1,2)])
colnames(DATA_2_B2)[2]<-"total.vessels"

DATA_2_B<-rbind(DATA_2_B1,DATA_2_B2)
(DATA_2_B<-separate(DATA_2_B, col=FS, into=c("A","B","C","D","FF"), sep="_"))
(DATA_2_B<-DATA_2_B%>%unite("FS",C:FF, remove = T, sep = "_"))

# now you can merege DTS checked and PGP checked 
(DATA_2<-rbind(DATA_2_A,DATA_2_B))

DATA_2$Month<-0
DATA_2$Unit<-"vess"
DATA_2$Source<-"FDI_capacity_by_country"
colnames(DATA_2)[1]<-"Country"
colnames(DATA_2)[2]<-"Year"
colnames(DATA_2)[3]<-"Fleet_segments"

(DATA_2<-DATA_2%>%arrange(Year,Fleet_segments))

# Step 2 #======================================================================

# Now we load old data from 2008 to 2013 where available in 08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx. 
# Unfortunately this data are at a Country level only. Fleet segment and GSA detail are not presents. 
# NB. If data in 2006 and 2007 are not present please assume those equal to 2008. 
# The lenght of time series should be mantained the same for all the input csv file created for BMT. 
# To solve this missing data problem, please calculate the % of your GSA respect to all the GSA in your country from the FDI data in 2014. 
# After, I can apply this % to STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment data where there are not specification by GSA but by Country only.
# This is a way to solve this missing problem you may have other solutions. 
# Here the extraction of data from 2008 to 2013.

dir<-"D:/Andrea/Desktop/NEW_BEMTool/STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment.xlsx"

(OLD_DATA<-read_xlsx(dir, sheet = 2))

# Below the all GSA extraction

CC= "ITA"
FT1= "DTS"
FT2= "PGP"
LOA<-c("VL0612" ,"VL1218", "VL1824", "VL2440")
yearx<-2013 # indicate the last year of FDI available data at a GSAs level

(OLD_DATA_DTS<-OLD_DATA%>%
    select(country_code,supra_reg,year,fishing_tech,variable_code,vessel_length,variable_code,value,unit)%>%
    filter(country_code%in%CC, year<yearx & variable_code%in%"totves" & fishing_tech%in%FT1 & supra_reg %in%"AREA37" & vessel_length%in%LOA))

# I need to add a table check also here 

(vessel_length<-rep(unique(OLD_DATA_DTS$vessel_length),length(unique(OLD_DATA_DTS$year))))
(year<-rep(unique(OLD_DATA_DTS$year),each=(length(unique(OLD_DATA_DTS$vessel_length)))))
  
(data_check<-data.frame(year,vessel_length))
(data_check$country_code<-CC)
(data_check$fishing_tech<-FT1)
(data_check$value<-0)
# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.

(OLD_DATA_DTS<-OLD_DATA_DTS[,c(1,3,4,6,7)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(3,1,4,2,5)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))

(OLD_DATA_DTS<-merge(OLD_DATA_DTS,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_DTS[is.na(OLD_DATA_DTS)] = 0.00001)
(OLD_DATA_DTS<-OLD_DATA_DTS[,c(1,2)])
colnames(OLD_DATA_DTS)[2]<-"total.vessels"

(OLD_DATA_PGP<-OLD_DATA%>%
    select(country_code,supra_reg,year,fishing_tech,variable_code,vessel_length,value,unit)%>%
    filter(country_code%in%CC,  year<yearx & variable_code%in%"totves" & fishing_tech%in%FT2 & supra_reg %in%"AREA37" & vessel_length%in%c("VL0006","VL0612" ,"VL1218")))


(OLD_DATA_PGP$vessel_length[OLD_DATA_PGP$vessel_length%in%c("VL0006","VL0612")]<-"VL0012")
(OLD_DATA_PGP<-OLD_DATA_PGP%>%
    group_by(country_code,supra_reg,year,fishing_tech,variable_code,vessel_length,unit)%>%
    summarise(value=sum(value)))
# check if all the fleet segment are available in all year or there are some missing data.

(vessel_length<-rep(unique(OLD_DATA_PGP$vessel_length),length(unique(OLD_DATA_PGP$year))))
(year<-rep(unique(OLD_DATA_PGP$year),each=(length(unique(OLD_DATA_PGP$vessel_length)))))
  
(data_check<-data.frame(year,vessel_length))
(data_check$country_code<-CC)
(data_check$fishing_tech<-FT2)
(data_check$value<-0)
# now you merge the two data frame and you have all fleet segments for all GSAs in all year. The missing fleet segment have been replaced with 0s.

(OLD_DATA_PGP<-OLD_DATA_PGP[,c(1,3,4,6,8)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))
(data_check<-data_check[,c(3,1,4,2,5)]%>%unite("FS",country_code:vessel_length, remove = T, sep = "_"))


(OLD_DATA_PGP<-merge(OLD_DATA_PGP,data_check,  by.x ="FS", by.y="FS", all.x = F, all.y = T))
(OLD_DATA_PGP[is.na(OLD_DATA_PGP)] = 0.00001)
(OLD_DATA_PGP<-OLD_DATA_PGP[,c(1,2)])
colnames(OLD_DATA_PGP)[2]<-"total.vessels"

(OLD_DATA<-rbind(OLD_DATA_DTS,OLD_DATA_PGP))


# This is the old data i need
(OLD_DATA<-separate(OLD_DATA, col=FS, into=c("A","B","C","D"), sep="_"))
colnames(OLD_DATA)[1]<-"country_code"
colnames(OLD_DATA)[2]<-"year"
colnames(OLD_DATA)[3]<-"fishing_tech"
colnames(OLD_DATA)[4]<-"vessel_length"


(OLD_DATA_2<-OLD_DATA%>%arrange(year,fishing_tech,vessel_length))


# STEP 3 ===================================================
# Below the recent data with all GSAs. I this point I need to calculate what is the % of vessels of GSAs analysed respect to the all fleet. Tho do this I need to calculate this % in the last available year where I have data at a GSAs level. I' assuming this % remains constant back in time. 

allGSAs<-c("GSA17","GSA18","GSA19","GSA16","GSA10","GSA9","GSA11")
LOA1<-c("VL1218", "VL0612", "VL1824", "VL2440")

# ======= DTS ==================
(GSAITA_TOT_RECENTDATA_DTS<-RECENTDATA2%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,total.vessels)%>%
    filter(Country.name%in%COUNTRY & year%in%yearx & Fishing.Technique%in%FT1 & Vessel.Length.Category%in%LOA1 & principal.sub.region%in%allGSAs))
# ======= PGP ==================

LOA2<-c("VL0006","VL0612","VL1218")

(GSAITA_TOT_RECENTDATA_PGP1<-RECENTDATA2%>%
    select(Country.name,year,Vessel.Length.Category,Fishing.Technique,principal.sub.region,total.vessels)%>%
    filter(Country.name%in%COUNTRY & year%in%yearx & Fishing.Technique%in%FT2 & Vessel.Length.Category%in%LOA2 & principal.sub.region%in%allGSAs))

(GSAITA_TOT_RECENTDATA_PGP1$Vessel.Length.Category[GSAITA_TOT_RECENTDATA_PGP1$Vessel.Length.Category%in%c("VL0006","VL0612")]<-"VL0012")

(GSAITA_TOT_RECENTDATA_PGP1<-GSAITA_TOT_RECENTDATA_PGP1%>%
    group_by(Country.name,year,Fishing.Technique,principal.sub.region,Vessel.Length.Category)%>%
    summarize(total.vessels=sum(as.numeric(total.vessels))))

(GSAITA_TOT_RECENTDATA<-rbind(GSAITA_TOT_RECENTDATA_DTS,GSAITA_TOT_RECENTDATA_PGP1))
(GSAITA_TOT_RECENTDATA2<-GSAITA_TOT_RECENTDATA%>%arrange(year,Fishing.Technique,Vessel.Length.Category))

(total<-sum(GSAITA_TOT_RECENTDATA2$total.vessels))


(GSAITA_TOT_RECENT_2014_DTS<-GSAITA_TOT_RECENTDATA2%>%
    filter(year %in%yearx & Fishing.Technique%in%FT1)%>%
    group_by(Country.name,year ,Fishing.Technique,Vessel.Length.Category)%>%
    summarise(total.vessels=sum(as.numeric(total.vessels))))

(GSAITA_TOT_RECENT_2014_PGP<-GSAITA_TOT_RECENTDATA2%>%
    filter(year%in%yearx  & Fishing.Technique%in%FT2)%>%
    group_by(Country.name,year ,Fishing.Technique,Vessel.Length.Category)%>%
    summarise(total.vessels=sum(as.numeric(total.vessels))))

(GSAITA_TOT_RECENT_2014<-rbind(GSAITA_TOT_RECENT_2014_DTS,GSAITA_TOT_RECENT_2014_PGP))

# NOw it is time to calculate the % of the oldest available year. 

(DATA_3<-DATA_2%>%filter(Year%in%yearx))
(DATA_3$nationa_total<-total)
(DATA_3$PROP<-DATA_3$total.vessels/DATA_3$nationa_total)

# Back to the old data set

# buplicate the % data frame for the amount ofyear analysed.

data<-list()

for (i in 1: length(unique(OLD_DATA_2$year))){
  data[[i]]<-DATA_3
PROP_DATA_3 = do.call(rbind, data)
}

# A this point we need to create a df of the same size of your time series 

data<-list()
# duplicate the data frame of old data for the amount of gsas analysed
for (i in 1: length(AREA)){
  data[[i]]<-OLD_DATA_2
OLD_DATA_3 = do.call(rbind, data)
}
(OLD_DATA_3<-OLD_DATA_3%>%arrange(year))

(OLD_DATA_FULL<-cbind(OLD_DATA_3,PROP_DATA_3))
(OLD_DATA_FULL$true_value<-OLD_DATA_FULL$nationa_total*OLD_DATA_FULL$PROP)

(OLD_DATA_FULL<-OLD_DATA_FULL[,c(1,2,8,10,11,15)])
# Step 3 #===============================================================================

# Now you may add the all old data to the recent data frame
OLD_DATA_FULL$Source<-"STECF_21-08_EU_Fleet_Economic_and_Transversal_data_fleet_segment"
colnames(OLD_DATA_FULL)[6]<-"value"

# now you need to create the absent 2006 and 2007 data equal to 2008 
(OLD_DATA_2006<-OLD_DATA_FULL%>%filter(year%in%"2008"))
OLD_DATA_2006[,2]<-"2006"

(OLD_DATA_2007<-OLD_DATA_FULL%>%filter(year%in%"2008"))
OLD_DATA_2007[,2]<-"2007"

# merge all the old data set 
(OLD_DATA_FULL<-rbind(OLD_DATA_2006,OLD_DATA_2007,OLD_DATA_FULL))



colnames(OLD_DATA_FULL)[2]<-"Year"

colnames(DATA_2)[1]<-"country_code"
colnames(DATA_2)[4]<-"value"
(BIGDF<-rbind(OLD_DATA_FULL,DATA_2))
BIGDF<-BIGDF[,c(3,2,4,5,6,7)]
colnames(BIGDF)[1]<-"FS"
colnames(BIGDF)[5]<-"Vess"

# add the current year of the assessment assuming current year = to the last availabel year 

(BIGDF_lastyear<-BIGDF%>%filter(Year%in%lastyear))
(currentyear<-lastyear+1)
BIGDF_lastyear[,2]<-currentyear
(BIGDF<-rbind(BIGDF,BIGDF_lastyear))

write.csv(BIGDF,"D:/Andrea/Desktop/NEW_BEMTool/FINALDF_VESSEL.csv", sep=";", row.names=F) 
FINALDF<-BIGDF # ATTENTION: you will use this Data frame for some calculation below, do not delete it from your global environment. 
FINALDF$Year<-as.numeric(FINALDF$Year)

# Step 4 #============================================================================
# In this last step you have your data frame and you just need to run the loop for creating the Bemtool input csv file

ts<-c(2006:currentyear)
trans_year=c(currentyear)

# start with VESSELS
(Vess_data=FINALDF)
Fleet_segments <-  unique(FINALDF$FS) 

(DF1=matrix(0,nrow=12,ncol=length(ts)))
(colnames(DF1)=ts)
(rownames(DF1)=seq(1,12,1))

# Fleet_segments[1]
(Vess_data_temp=Vess_data[Vess_data$FS%in%Fleet_segments[1],])

for (rr in 1:nrow(Vess_data_temp)){
  
  year=Vess_data_temp$Year[rr] 
  month=Vess_data_temp$Month[rr]
  #unit=Vess_data_temp$Unit[rr]
  
  if (month!=0){
    DF1[rownames(DF1)==month,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  } else if (month==0){
    DF1[,colnames(DF1)==year]=Vess_data_temp$Vess[rr]
  }  
  
}

DF1[,colnames(DF1) %in% trans_year]= DF1[,as.numeric(colnames(DF1)) == (trans_year[1]-1)]

for (fs in Fleet_segments[-1]){
  
  print(fs,quote=F)
  DF_next=matrix(0,nrow=12,ncol=length(ts))
  colnames(DF_next)=ts
  rownames(DF_next)=seq(1,12,1)
  
  # Fleet_segments[1]
  Vess_data_temp=Vess_data[Vess_data$FS==fs,]
  
  for (rr in 1:nrow(Vess_data_temp)){
    
    year=Vess_data_temp$Year[rr] 
    month=Vess_data_temp$Month[rr]
    unit=Vess_data_temp$Unit[rr]
    
    if (month!=0){
      DF_next[rownames(DF_next)==month,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
      
    } else if (month==0){
      
      DF_next[,colnames(DF_next)==year]=Vess_data_temp$Vess[rr]  
    }  
    
  }
  DF_next[,colnames(DF_next) %in% trans_year]= DF_next[,as.numeric(colnames(DF_next)) == (trans_year[1]-1)]
  
  DF1=cbind(DF1,DF_next)
  
} # ciclo FS

for (f in 1:length(Fleet_segments)){
  print(Fleet_segments[f])
  ini=1 +(f-1)*length(ts)
  fin=(f)*length(ts)
  if (length(DF1[,ini:fin][which(DF1[,ini:fin]==0)])>0){
    DF1[,ini:fin][which(DF1[,ini:fin]==0)] = mean(DF1[,ini:fin][which(DF1[,ini:fin]!=0)]) 
  }
}

#FirstRow=t(data.frame(rep(ts,length(Fleet_segments))))
#FirstRow=c("Units: kg",FirstRow)

SecondRow=t(data.frame(rep(Fleet_segments[1],length(ts)))  )

for (fs in Fleet_segments[-1]){
  print(fs)
  SecondRow2=t(data.frame(rep(fs,length(ts))))
  
  SecondRow=cbind(SecondRow,SecondRow2) 
  
}

empty_row=t(data.frame(rep("",length(SecondRow))))

DF_final=(rbind(SecondRow,empty_row,empty_row))

DF_final=rbind(DF_final,as.matrix(DF1))

DF_final= cbind(c(   "casestudy.fleetsegmentcode",
                     "casestudy.fishingtechnique",
                     "casestudy.loa",
                     "casestudy.month1",
                     "casestudy.month2",
                     "casestudy.month3",
                     "casestudy.month4",
                     "casestudy.month5",
                     "casestudy.month6",
                     "casestudy.month7",
                     "casestudy.month8",
                     "casestudy.month9",
                     "casestudy.month10",
                     "casestudy.month11",
                     "casestudy.month12"),DF_final)

colnames(DF_final)[1]="Units: number"

write.table(DF_final,"D:/Andrea/Desktop/NEW_BEMTool/number-of-vessels_NEW.csv",row.names=F) 

```
